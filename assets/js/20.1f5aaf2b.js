(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{475:function(t,a,s){"use strict";s.r(a);var e=s(2),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1、display-none与-visibility-hidden-异同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、display-none与-visibility-hidden-异同"}},[t._v("#")]),t._v(" 1、display: none与 visibility: hidden 异同")]),t._v(" "),s("p",[t._v("display: none设置后，元素不可见，并且不占位置，它的所有后代元素也全都不可见且不占位置。\nvisibility: hidden设置后，元素不可见，但是还是占有位置，会影响后面的布局，而且\n该属性具有继承性，假如给它的后代元素设置成visibility: visible，后代元素又会显示出来。")]),t._v(" "),s("h2",{attrs:{id:"_2、css中哪些属性可以继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、css中哪些属性可以继承"}},[t._v("#")]),t._v(" 2、css中哪些属性可以继承")]),t._v(" "),s("h3",{attrs:{id:"_1-字体系列属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-字体系列属性"}},[t._v("#")]),t._v(" 1.字体系列属性")]),t._v(" "),s("p",[t._v("font：组合字体\nfont-family：规定元素的字体系列\nfont-weight：设置字体的粗细\nfont-size：设置字体的尺寸\nfont-style：定义字体的风格\nfont-variant：设置小型大写字母的字体显示文本，这意味着所有的小写字母均会被转换为大写，但是所有使用小型大写字体的字母与其余文本相比，其字体尺寸更小。\nfont-stretch：对当前的 font-family 进行伸缩变形。所有主流浏览器都不支持。\nfont-size-adjust：为某个元素规定一个 aspect 值，这样就可以保持首选字体的 x-height。")]),t._v(" "),s("h3",{attrs:{id:"_2-文本系列属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-文本系列属性"}},[t._v("#")]),t._v(" 2.文本系列属性")]),t._v(" "),s("p",[t._v("text-indent：文本缩进\ntext-align：文本水平对齐\nline-height：行高\nword-spacing：增加或减少单词间的空白（即字间隔）\nletter-spacing：增加或减少字符间的空白（字符间距）\ntext-transform：控制文本大小写\ndirection：规定文本的书写方向\ncolor：文本颜色")]),t._v(" "),s("h3",{attrs:{id:"_3-元素可见性："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-元素可见性："}},[t._v("#")]),t._v(" 3.元素可见性：")]),t._v(" "),s("p",[t._v("visibility")]),t._v(" "),s("h3",{attrs:{id:"_4-表格布局属性："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-表格布局属性："}},[t._v("#")]),t._v(" 4.表格布局属性：")]),t._v(" "),s("p",[t._v("caption-side、border-collapse、border-spacing、empty-cells、table-layout")]),t._v(" "),s("h3",{attrs:{id:"_5-列表布局属性："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-列表布局属性："}},[t._v("#")]),t._v(" 5.列表布局属性：")]),t._v(" "),s("p",[t._v("list-style-type、list-style-image、list-style-position、list-style")]),t._v(" "),s("h3",{attrs:{id:"_6-生成内容属性："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-生成内容属性："}},[t._v("#")]),t._v(" 6.生成内容属性：")]),t._v(" "),s("p",[t._v("quotes")]),t._v(" "),s("h3",{attrs:{id:"_7-光标属性："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-光标属性："}},[t._v("#")]),t._v(" 7.光标属性：")]),t._v(" "),s("p",[t._v("cursor")]),t._v(" "),s("h3",{attrs:{id:"_8-页面样式属性："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-页面样式属性："}},[t._v("#")]),t._v(" 8.页面样式属性：")]),t._v(" "),s("p",[t._v("page、page-break-inside、windows、orphans")]),t._v(" "),s("h3",{attrs:{id:"_9-声音样式属性："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-声音样式属性："}},[t._v("#")]),t._v(" 9.声音样式属性：")]),t._v(" "),s("p",[t._v("speak、speak-punctuation、speak-numeral、speak-header、speech-rate、volume、voice-family、pitch、pitch-range、stress、richness、、azimuth、elevation")]),t._v(" "),s("h2",{attrs:{id:"_3、简述一下css盒模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、简述一下css盒模型"}},[t._v("#")]),t._v(" 3、简述一下css盒模型")]),t._v(" "),s("p",[t._v("从内到外，content,padding,border,margin\n页面中默认是content-box,宽高以content来计算\n可以通过box-sizing设置为border-box,这样就是以border来计算，有时候会比较方便\nbootstrap中默认是border-box")]),t._v(" "),s("h2",{attrs:{id:"_4、列举出尽可能多的css选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、列举出尽可能多的css选择器"}},[t._v("#")]),t._v(" 4、列举出尽可能多的css选择器")]),t._v(" "),s("p",[t._v("类选择器(.)，伪类选择器(😃，属性选择器([])，标签选择器，伪元素选择器(:😃，兄弟选择器(+)，子元素选择器(>)，后代选择器")]),t._v(" "),s("h2",{attrs:{id:"_5、样式的优先级如何计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、样式的优先级如何计算"}},[t._v("#")]),t._v(" 5、样式的优先级如何计算")]),t._v(" "),s("p",[t._v("根据权重来累加，权重规则如下\n第一级：！important 无穷大\n第二级：行内样式 1000\n第三级：id选择器 # 100\n第四级：类选择器，伪类选择器 ，属性选择器10\n第五级：标签选择器，伪元素选择器，1\n兄弟选择器，子元素选择器，后代选择器 0\n继承的样式没有权重")]),t._v(" "),s("h2",{attrs:{id:"_6、使用过哪些布局方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、使用过哪些布局方式"}},[t._v("#")]),t._v(" 6、使用过哪些布局方式")]),t._v(" "),s("p",[t._v("用过float，但是需要清除浮动，比较麻烦\nposition定位，子绝父相\nflex布局，在小程序里用的比较多，移动端也可以经常使用，不用考虑兼容性\n流式布局：用百分数来表示宽，这样屏幕缩放时，盒子大小会一起缩放\nrem布局+媒体查询：设置根元素的字体大小，然后其他的宽高等都用rem。不同屏幕大小实现动态变化")]),t._v(" "),s("h2",{attrs:{id:"_7、简述一下对html语义化的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、简述一下对html语义化的理解"}},[t._v("#")]),t._v(" 7、简述一下对html语义化的理解")]),t._v(" "),s("p",[t._v("HTML标签可以分为有语义的标签，和无语义的标签。比如table表示表格，form表示表单，a标签表示超链接，strong标签表强调。无语义标签典型的有div,span等。HTML语义化我的理解就是在页面中尽量多滴结合场景多使用含有语义的标签，少使用div,span等无语义的标签。\nhtml语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析，利于SEO，方便阅读")]),t._v(" "),s("h2",{attrs:{id:"_8、列举出尽可能多的行内元素、块元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、列举出尽可能多的行内元素、块元素"}},[t._v("#")]),t._v(" 8、列举出尽可能多的行内元素、块元素")]),t._v(" "),s("p",[t._v("块元素：div、p、h1~h6、ul、ol、li、table、header、section、aside、footer")]),t._v(" "),s("p",[t._v("行内元素：span、img、a、lable、input、em（强调）、i（斜体）、textarea、select、strong、u（下划线）")]),t._v(" "),s("h2",{attrs:{id:"_9、js中有哪些数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、js中有哪些数据类型"}},[t._v("#")]),t._v(" 9、js中有哪些数据类型")]),t._v(" "),s("p",[t._v("基本数据类型6种:undefined,null,boolean,strting,number,还有es6新增的symbol(防止命名冲突)\n引用数据类型：object")]),t._v(" "),s("h2",{attrs:{id:"_10、简述一下作用域和闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10、简述一下作用域和闭包"}},[t._v("#")]),t._v(" 10、简述一下作用域和闭包")]),t._v(" "),s("p",[t._v("作用域就是变量起作用的范围。作用域包括全局作用域，函数作用域以块级作用域，ES6中的let和const可以形成块级作用域。\n闭包是可以访问其他函数内部变量的函数，函数作用域不允许外部访问，所以闭包是连接函数内外的桥梁")]),t._v(" "),s("h2",{attrs:{id:"_11、简述对this的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11、简述对this的理解"}},[t._v("#")]),t._v(" 11、简述对this的理解")]),t._v(" "),s("p",[t._v("this表示当前对象，this的指向是根据调用的上下文来决定的，默认指向window对象，指向window对象时可以省略不写")]),t._v(" "),s("h3",{attrs:{id:"_1-普通函数，定时器，立即执行函数的内部，this指向的是window"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-普通函数，定时器，立即执行函数的内部，this指向的是window"}},[t._v("#")]),t._v(" 1.普通函数，定时器，立即执行函数的内部，this指向的是window")]),t._v(" "),s("h3",{attrs:{id:"_2-箭头函数没有自己的this，是继承得到的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-箭头函数没有自己的this，是继承得到的"}},[t._v("#")]),t._v(" 2.箭头函数没有自己的this，是继承得到的")]),t._v(" "),s("h3",{attrs:{id:"_3-构造函数的this指向new的实例化对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-构造函数的this指向new的实例化对象"}},[t._v("#")]),t._v(" 3.构造函数的this指向new的实例化对象")]),t._v(" "),s("h3",{attrs:{id:"_4-对象的方法调用时，this指向方法所属对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-对象的方法调用时，this指向方法所属对象"}},[t._v("#")]),t._v(" 4.对象的方法调用时，this指向方法所属对象")]),t._v(" "),s("h3",{attrs:{id:"_5-事件绑定的方法，this指向绑定事件的对象（比如给button加click事件，this指向button）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-事件绑定的方法，this指向绑定事件的对象（比如给button加click事件，this指向button）"}},[t._v("#")]),t._v(" 5.事件绑定的方法，this指向绑定事件的对象（比如给button加click事件，this指向button）")]),t._v(" "),s("p",[t._v("call,apply,bind可以改变this指向，其中call，apply还会调用函数，bind不会调用函数，call可以接收单个单个的参数，而apply是接收数组。")]),t._v(" "),s("h2",{attrs:{id:"_12、写出下面代码执行的结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12、写出下面代码执行的结果"}},[t._v("#")]),t._v(" 12、写出下面代码执行的结果")]),t._v(" "),s("h3",{attrs:{id:"题1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题1"}},[t._v("#")]),t._v(" 题1")]),t._v(" "),s("p",[t._v("setT imeout(() => conso l e.  log(1)， 0)\nconso l e. log(2)\n2\n1\n定时器，事件都是异步代码，等待同步代码执行完成后，才会执行异步代码，无论定时器的时间设置的是多少。")]),t._v(" "),s("h3",{attrs:{id:"题2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题2"}},[t._v("#")]),t._v(" 题2")]),t._v(" "),s("p",[t._v("Math. max. apply (nul l, [1, 2, 3, 4])\n4\nMath.max()是求最大值，但是只能接收单个的数，使用apply来接收数组，求数组的最大值\n也可以用扩展运算符,Math.max(...[1,2,3,4])\n求数组最大值也可以用for循环和sort函数")]),t._v(" "),s("p",[t._v("没有交笔试，也没有面试，就去之前那家了。。。")])])}),[],!1,null,null,null);a.default=r.exports}}]);